openapi: 3.0.0

info:
  title: Hobby-connect API
  description: Rest API for Hobby-Connect
  version: 0.0.1
  termsOfService: https://hobby-connect.de/
  contact:
    name: Ferdinand Strobel
    email: ferdistr08@gmail.com
    url: http://ferdi-homelab.casa/
tags:
  - name: hobby-connect

paths:

  /loginUser:
    post:
      tags:
        - hobby-connect
      summary: postLoginUser
      description: login user with email and password
      operationId: postLoginUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/loginUserBody"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/loginUserResponse"
        "401":
          description: Unauthorized

  /likeUser:
    post:
      tags:
        - hobby-connect
      summary: postLikeUser
      description: Like a User  with UserId
      operationId: postLikeUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/standardRequestBody"
      parameters:
        - name: userId
          in: query
          required: true
          description: userId from liked User
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/likeUserResponse"






#get token als post und dann get session als post


components:
  schemas:

    standardRequestBody:
      type: object
      properties:
        sessionId:
          type: string
          description: must be valid sessionId for User

    likeUserResponse:
      type: object
      properties:
        matched:
          type: boolean
          description: true when users got a match, triggers popup in Front-end

    loginUserBody:
      type: object
      properties:
        email:
          type: string
          description: Users Email
        password:
          type: string
          description: Users Password


    loginUserResponse:
      type: object
      properties:
        sessionId:
          type: string
          description: User session-ID
        refreshToken:
          type: string
          description: User refresh-token
        ttl:
          type: integer
          description: time to life




